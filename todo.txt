-- Display

Show that a line is longer than a given width.
  Should be based on a config variable that sets the text width.

Handle unicode.

-- Editing

When an anonymous buffer is saved, ask for the name?

Reflow a paragraph?  How to detect the prefix?

Handle DELETE key

Implement delete of page/word.

Autocomplete?
  Or maybe also just look up words in the current file?
  Maybe variables control sources of completions?

-- Navigation

For the "g"oto command, if we're already at the position specified, then invert the direction and try again.
  Obviously, don't get into an empty loop (e.g. "g"oto in an empty line).

Add a "margin_lines" integer variable.
  Scroll the file automatically to always keep that number of entries visible above/below cursor.
    Unless at the beginning/end.
  Also "margin_columns", consistent.

-- Prompt

Support scrolling back?

-- Commands

Make it possible to scroll just one line past the last line.  In command mode, it should just follow the output to the end.
  Might need tweaks to various modes to keep them from crashing?

When the flags of a file changes, update the list of buffers if it's shown.

Improve "af":
  Add more structures to "af":
    BUFFER> run a command with the whole contents of the buffer
      (another possibility: run a command for each line in buffer (prompt))
  Handle repetitions?  Maybe for line, run multiple lines in separate buffers?

When running subcommands with aC, actually set variables "ARG0", "ARG1", "ARG2", "ARG3", with words in line...

Create some "barriers" that limit the number of subprocesses.  Set a limit for each.  Maybe as a special type of buffer?  Let it reload to show the state?
  Commands should by default go against a shared barrier, but should have a variable that specifies what barrier to use.

-- Variables

Convert more variables to the new system for defining variables.

Save the contents of variables?

Allow configuration files to specify variables for buffers (by various criteria)

Let commands inherit variables from their parent.

Add a variable for specifying which characters should be considered parts of a path?
  Then use that to find the current path in the current line.
  Then set that for c++ files so that #include "local_file.cc" works.

-- Misc

Add a variable to set the exit status?
  Should probably be an int, default to 0.
  Maybe add a quick way of setting it?
