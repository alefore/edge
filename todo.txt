-- Display

-- Editing

Handle DELETE key

Implement delete of page.

-- Navigation

Improve "g", the current behavior is kind of annoying:
  There should be a way (other than pressing it again) to specify if it should ignore space.  Maybe a modifier can do it?

Add a "margin_lines" integer variable.
  Scroll the file automatically to always keep that number of entries visible above/below cursor.
    Unless at the beginning/end.
  Also "margin_columns", consistent.

Add a boolean variable "highlight_current_line" (default: false); when set, highlight the line with the current cursor position.

-- Prompt

-- Commands

Improve "af":
  Add more structures to "af":
    BUFFER> run a command with the whole contents of the buffer
      (another possibility: run a command for each line in buffer (prompt))
  Handle repetitions?  Maybe for line, run multiple lines in separate buffers?

When running subcommands with aC, actually set variables "ARG0", "ARG1", "ARG2", "ARG3", with words in line...

Create some "barriers" that limit the number of subprocesses.  Set a limit for each.  Maybe as a special type of buffer?  Let it reload to show the state?
  Commands should by default go against a shared barrier, but should have a variable that specifies what barrier to use.

-- List of buffers

Highlight how many marks each buffer has, as both source and target.

-- Variables

Save the contents of variables?  Maybe in a per-buffer file?

atomic_lines should probably also apply to multiple cursors.

-- Cursors

Add "C!": set a cursor in every mark in the current file.

-- VM

Add support for templates, so that we can do "vector<string>".

-- Client/server

Allow a client to just disconnect.
  This is currently hard because the server doesn't know which client issued the commands it processes.

-- Misc

When running nested edge on a file, pass its absolute path to the parent.

Allow running a nested edge sending a c++ (extension) command to the parent.

Support variables scoped at the Editor level (i.e. not specific to a given buffer).

Add a variable to set the exit status?
  Should probably be an int, default to 0.
  Maybe add a quick way of setting it to -1? "aE"?
